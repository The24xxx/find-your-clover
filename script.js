const container = document.getElementById('game-container');
const message = document.getElementById('message');

const leafCount = 210; // poƒçet fale≈°n√Ωch jetel≈Ø
const leafVariants = 6; // poƒçet variant obr√°zk≈Ø leaf1.png a≈æ leaf6.png
const spriteSize = 64; // velikost obr√°zk≈Ø v px (≈°√≠≈ôka i v√Ω≈°ka)
const minGap = 10; // minim√°ln√≠ mezera mezi objekty

const positions = []; // ulo≈æen√© pozice v≈°ech objekt≈Ø

// üéØ Vytvo≈ôen√≠ ƒçty≈ôl√≠stku
const clover = document.createElement('img');
clover.src = 'assets/clover.png';
clover.classList.add('clover');

placeWithoutOverlap(clover);

clover.addEventListener('click', () => {
  message.textContent = 'Nejmilej≈°√≠, nech≈• ti tento ƒçty≈ôl√≠stek p≈ôinese lehkost do tv√© utr√°pen√© mysli.';
});

container.appendChild(clover);

// üçÄ Vytvo≈ôen√≠ fale≈°n√Ωch jetel≈Ø
for (let i = 0; i < leafCount; i++) {
  const leaf = document.createElement('img');
  const variant = (i % leafVariants) + 1;
  leaf.src = `assets/leaf${variant}.png`;
  leaf.classList.add('leaf');

  leaf.addEventListener('click', () => {
    message.textContent = '‚ùå To nen√≠ ƒçty≈ôl√≠stek. Zkus znovu!';
  });

  placeWithoutOverlap(leaf);
  container.appendChild(leaf);
}

// üß† Funkce pro um√≠stƒõn√≠ bez p≈ôekryvu
function placeWithoutOverlap(element) {
  const maxX = container.clientWidth - spriteSize;
  const maxY = container.clientHeight - spriteSize;
  let x, y;
  let attempts = 0;

  do {
    x = Math.random() * maxX;
    y = Math.random() * maxY;
    attempts++;
    if (attempts > 10000) {
      console.warn("Nelze naj√≠t voln√© m√≠sto.");
      break;
    }
  } while (!isPositionFree(x, y));

  positions.push({ x, y });
  element.style.left = `${x}px`;
  element.style.top = `${y}px`;
}

// üß† Kontrola, zda je pozice voln√° (obd√©ln√≠kov√° kolize)
function isPositionFree(x, y) {
  for (const pos of positions) {
    const overlapX = Math.abs(pos.x - x) < (spriteSize + minGap);
    const overlapY = Math.abs(pos.y - y) < (spriteSize + minGap);
    if (overlapX && overlapY) {
      return false;
    }
  }
  return true;
}
